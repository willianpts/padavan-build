###############################################################
# Author(s): Việt Anh Bùi | https://github.com/vietanhbui2000 #
#            P3TERX | https://github.com/P3TERX               #
#            coolsnowwolf | https://github.com/coolsnowwolf   #
###############################################################

name: Build OpenWrt

on:
  push:
    paths:
      - 'triggers/build-openwrt.md'

env:
  REPO_URL: https://git.openwrt.org/openwrt/openwrt.git
  REPO_BRANCH: openwrt-21.02
  DEVICE_CONFIG: configs/openwrt/xiaomi_miwifi-mini.config
  CUSTOMIZE_FIRMWARE: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE_DIR: true
  CUSTOMIZE_SH: scripts/openwrt/customize.sh
  TZ: Asia/Ho_Chi_Minh

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential ccache ecj fastjar file g++ gawk \
        gettext git java-propose-classpath libelf-dev libncurses5-dev \
        libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \
        python3-distutils python3-setuptools rsync subversion swig time \
        xsltproc zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        git clone $REPO_URL openwrt
        cd openwrt
        git checkout $REPO_BRANCH

    - name: Update & install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load device configuration
      run: |
        cp $DEVICE_CONFIG openwrt/.config

    - name: Customize firmware
      if: env.CUSTOMIZE_FIRMWARE == 'true' && !cancelled()
      run: |
        cp $CUSTOMIZE_SH openwrt/customize.sh
        cd openwrt
        chmod +x customize.sh
        ./customize.sh

    - name: Generate default configuration
      run: |
        cd openwrt
        make defconfig

    - name: Download packages
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: ${{ env.DEVICE_NAME }}_openwrt_bin_${{ env.DATE }}
        path: openwrt/bin

    - name: Prepare files
      id: prepare
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE_DIR == 'true'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.prepare.outputs.status == 'success' && env.UPLOAD_FIRMWARE_DIR == 'true'
      with:
        name: ${{ env.DEVICE_NAME }}_openwrt_${{ env.DATE }}
        path: ${{ env.FIRMWARE }}
